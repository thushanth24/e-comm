export type Tables<T extends keyof Database['public']['Tables']> = 
  Database['public']['Tables'][T]['Row'];

export type Product = Tables<'Product'> & {
  category: Category;
  images: ProductImage[];
};

export type Category = Tables<'Category'> & {
  products?: Product[];
  parent?: Category | null;
  children?: Category[];
};

export type ProductImage = Tables<'ProductImage'>;

// This will be generated by Supabase CLI
// Run: npx supabase gen types typescript --project-id your-project-ref > src/types/database.types.ts
type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      Product: {
        Row: {
          id: number;
          name: string;
          slug: string;
          price: number;
          description: string;
          inventory: number;
          category_id: number;
          created_at: string;
          featured: boolean;
        };
        Insert: {
          id?: number;
          name: string;
          slug: string;
          price: number;
          description: string;
          inventory: number;
          category_id: number;
          created_at?: string;
          featured?: boolean;
        };
        Update: {
          id?: number;
          name?: string;
          slug?: string;
          price?: number;
          description?: string;
          inventory?: number;
          category_id?: number;
          created_at?: string;
          featured?: boolean;
        };
      };
      Category: {
        Row: {
          id: number;
          name: string;
          slug: string;
          parentId: number | null;
          createdAt: string;
          updatedAt: string;
        };
        Insert: {
          id?: number;
          name: string;
          slug: string;
          parentId?: number | null;
          createdAt?: string;
          updatedAt?: string;
        };
        Update: {
          id?: number;
          name?: string;
          slug?: string;
          parentId?: number | null;
          createdAt?: string;
          updatedAt?: string;
        };
      };
      ProductImage: {
        Row: {
          id: number;
          "storage_path": string;
          "productId": number;
          "createdAt": string;
          "public_url": string;  // Generated column
        };
        Insert: {
          id?: number;
          "storage_path": string;
          "productId": number;
          "createdAt"?: string;
          // public_url is generated, so it's not needed in Insert
        };
        Update: {
          id?: number;
          "storage_path"?: string;
          "productId"?: number;
          "createdAt"?: string;
          // public_url is generated, so it's not needed in Update
        };
      };
    };
  };
}
